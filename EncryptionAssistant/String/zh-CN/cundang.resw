<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="button1.Content" xml:space="preserve">
    <value>加密</value>
  </data>
  <data name="button2.Content" xml:space="preserve">
    <value>解密</value>
  </data>
  <data name="combobox.Header" xml:space="preserve">
    <value>加密/解密模式：</value>
  </data>
  <data name="combobox1.Header" xml:space="preserve">
    <value>加密/解密算法：</value>
  </data>
  <data name="mccheckbox1.Content" xml:space="preserve">
    <value>使用默认加密/解密密匙（推荐）</value>
  </data>
  <data name="String1" xml:space="preserve">
    <value>应用内存不足无法加密大于（390MB）的文件，敬请期待后续更新</value>
  </data>
  <data name="String10" xml:space="preserve">
    <value>请前往主页解密此文件&lt;版本高于1.3.711&gt;</value>
  </data>
  <data name="String11" xml:space="preserve">
    <value>尝试读取文件版本失败</value>
  </data>
  <data name="String12" xml:space="preserve">
    <value>解密时出现问题，请确保解密密匙，解密模式，解密算法的正确性，核对后请重试。如果你看到过这个提示很多次，请在反馈中心把这个问题报告给我们，谢谢</value>
  </data>
  <data name="String13" xml:space="preserve">
    <value>解密成功，点击下面的图片保存</value>
  </data>
  <data name="String14" xml:space="preserve">
    <value>请点击上面的图片选择要进行解密的文件</value>
  </data>
  <data name="String15" xml:space="preserve">
    <value>保存结果时出现问题，请重试。若重试多次后依旧出现这条提示，请将此问题反馈给我们，我们会尽力解决，谢谢</value>
  </data>
  <data name="String16" xml:space="preserve">
    <value>保存成功</value>
  </data>
  <data name="String17" xml:space="preserve">
    <value>请先进行加密/解密</value>
  </data>
  <data name="String18" xml:space="preserve">
    <value>恭喜你，密匙长度已经达到要求的40个字符</value>
  </data>
  <data name="String19" xml:space="preserve">
    <value>恭喜你，密匙长度已经达到要求的40个字符</value>
  </data>
  <data name="String2" xml:space="preserve">
    <value>密匙长度必须是40，请核对密匙</value>
  </data>
  <data name="String20" xml:space="preserve">
    <value>密码过长，应在0~20字符之间</value>
  </data>
  <data name="String21" xml:space="preserve">
    <value>两次输入的密码不一致</value>
  </data>
  <data name="String3" xml:space="preserve">
    <value>设置密码时，请确保两次输入的密码一致，且长度小于60个字符</value>
  </data>
  <data name="String4" xml:space="preserve">
    <value>加密时出现问题，请确保加密密匙，加密模式，加密算法的正确性，核对后请重试。如果你看到过这个提示很多次，请在反馈中心把这个问题报告给我们，谢谢</value>
  </data>
  <data name="String5" xml:space="preserve">
    <value>加密成功，点击下面的图片保存</value>
  </data>
  <data name="String6" xml:space="preserve">
    <value>请点击上面的图片选择要进行加密的文件。</value>
  </data>
  <data name="String7" xml:space="preserve">
    <value>应用内存不足无法解密大于（390MB）的文件，敬请期待后续更新</value>
  </data>
  <data name="String8" xml:space="preserve">
    <value>密匙长度必须是40，请核对密匙</value>
  </data>
  <data name="String9" xml:space="preserve">
    <value>输入密码时，请确保两次输入的密码一致，且长度小于60个字符</value>
  </data>
  <data name="textblock2.Text" xml:space="preserve">
    <value>1.3.711版本 加密/解密</value>
  </data>
  <data name="textblock3.Text" xml:space="preserve">
    <value>需要加密/解密的文件</value>
  </data>
  <data name="textblock5.Text" xml:space="preserve">
    <value>注意：若要给文件添加密码，请更改加密/解密模式为 普通模式 。由于密匙是40个0或1组成的，很容易看错，所以建议使用默认密匙。且在大部分情况下，加密/解密密匙和算法错误无法检测到，只有在使用文件时才会被你发现。部分被解密的文件的末尾存在多个/u008字符，我们大量的测试表明这不会影响使用，请放心。</value>
  </data>
  <data name="textblock7.Text" xml:space="preserve">
    <value>结果在这，点击保存</value>
  </data>
  <data name="textbox2.Header" xml:space="preserve">
    <value>自定义密匙：</value>
  </data>
  <data name="textbox2.PlaceholderText" xml:space="preserve">
    <value>点击下面的按钮输入密匙</value>
  </data>
  <data name="textbox3.Header" xml:space="preserve">
    <value>密码：</value>
  </data>
  <data name="textbox3.PlaceholderText" xml:space="preserve">
    <value>设置加密密码，或输入解密密码</value>
  </data>
  <data name="textbox4.Header" xml:space="preserve">
    <value>确认密码：</value>
  </data>
  <data name="textbox4.PlaceholderText" xml:space="preserve">
    <value>再次输入加密/解密密码</value>
  </data>
</root>